!!ARBvp1.0
OPTION  ARB_position_invariant;
ATTRIB  iPos         = vertex.position;
ATTRIB  iColour      = vertex.color;
ATTRIB  iTexCoord    = vertex.texcoord[0];
OUTPUT  oColour      = result.color;
OUTPUT  oTexCoord0   = result.texcoord[0];
OUTPUT  oTexCoord1   = result.texcoord[1];
OUTPUT  oFogCoord    = result.fogcoord;
PARAM   time         = program.local[65];
PARAM   turbulence   = program.local[64];
PARAM   lightAmbient = program.local[66];
PARAM   pMatrix[4]   = { state.matrix.projection };
PARAM   mvMatrix[4]  = { state.matrix.modelview };
PARAM   ivMatrix[4]  = { state.matrix.texture[1] };
PARAM   texMatrix[4]  = { state.matrix.texture[0] };
PARAM   fNoise[64]   = { program.local[0..63] };
TEMP    noise, viewPos, worldPos, texCoord;
ADDRESS noiseAddr;
DP4   viewPos.x, mvMatrix[0], iPos;
DP4   viewPos.y, mvMatrix[1], iPos;
DP4   viewPos.z, mvMatrix[2], iPos;
DP4   viewPos.w, mvMatrix[3], iPos;
MOV   oFogCoord.x, viewPos.z;
DP4   worldPos.x, ivMatrix[0], viewPos;
DP4   worldPos.y, ivMatrix[1], viewPos;
DP4   worldPos.z, ivMatrix[2], viewPos;
DP4   worldPos.w, ivMatrix[3], viewPos;
ADD   noise.x, worldPos.x, worldPos.z;SUB   noise.y, worldPos.z, worldPos.x;MUL   noise, noise, 0.0001220703125;
FRC   noise, noise;
MUL   noise, noise, 64;
ARL   noiseAddr.x, noise.x;
MOV   noise.x, fNoise[noiseAddr.x].x;
ARL   noiseAddr.x, noise.y;
MOV   noise.y, fNoise[noiseAddr.x].y;
MUL   noise, noise, turbulence.x;
DP4   texCoord.x, texMatrix[0], iTexCoord;
DP4   texCoord.y, texMatrix[1], iTexCoord;
ADD   oTexCoord0.xy, texCoord, noise;
MOV   oTexCoord0.z, 0;
MOV   oTexCoord0.w, 1;
MUL   oTexCoord1.xy, texCoord, 0.125;
MOV   oTexCoord1.zw, time.xxxw;
MUL   oColour.xyz, iColour, lightAmbient;
MOV   oColour.w, iColour.w;
END